# --- HTTP: только редирект на HTTPS, никаких location внутри ---
server {
    listen 80;
    server_name faso312.ru www.faso312.ru;

    if ($host = www.faso312.ru) { return 301 https://$host$request_uri; }  # managed by Certbot
    if ($host = faso312.ru)      { return 301 https://$host$request_uri; }  # managed by Certbot

    return 301 https://$host$request_uri;
}

# --- HTTPS: статика + API-проксирование ---
server {
    listen 443 ssl http2;
    server_name faso312.ru www.faso312.ru;

    root /var/www/react_practice;
    index index.html;

    ssl_certificate     /etc/letsencrypt/live/faso312.ru/fullchain.pem;    # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/faso312.ru/privkey.pem;      # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;                        # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;                          # managed by Certbot

    # React SPA
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Долгий кеш для статики (НЕ для HTML)
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico)$ {
        try_files $uri =404;
        access_log off;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # API → pm2-бэкенд, без кэша и без условных заголовков
    location /api/ {
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

       # Вебсокеты (если нужны)
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Убираем условные заголовки и кэш
        proxy_set_header If-Modified-Since "";
        proxy_set_header If-None-Match     "";
        etag off;
        expires off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;

        # На случай включённого proxy_cache где-то выше
        proxy_cache_bypass 1;
        proxy_no_cache 1;
    }


# 1) Ровно /py/ -> корень FastAPI "/"
location = /py/ {
    proxy_pass http://127.0.0.1:8000/;   # заметь слэш в конце
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";
}

# 2) Любой путь /py/<x> -> /api/<x> на FastAPI
location /py/ {
    proxy_pass http://127.0.0.1:8000/api/;  # слэш в конце обязателен
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";

    # (опционально) без кеша прокси
    proxy_set_header If-Modified-Since "";
    proxy_set_header If-None-Match     "";
    proxy_cache_bypass 1;
    expires off;
    add_header Cache-Control "no-store, no-cache, must-revalidate, max-age=0" always;
}


}