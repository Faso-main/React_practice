import React, { useState } from 'react';
import './App.css';

const Fridge = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [items, setItems] = useState([
    { id: 1, name: '–ú–æ–ª–æ–∫–æ', isInFridge: true },
    { id: 2, name: '–Ø–π—Ü–∞', isInFridge: true },
    { id: 3, name: '–°—ã—Ä', isInFridge: true },
    { id: 4, name: '–ö–æ–ª–±–∞—Å–∞', isInFridge: false },
    { id: 5, name: '–û–≤–æ—â–∏', isInFridge: false },
  ]);
  const [newItemName, setNewItemName] = useState('');

  const toggleDoor = () => {
    setIsOpen(!isOpen);
  };

  const addItem = () => {
    if (newItemName.trim() === '') return;
    
    const newItem = {
      id: Date.now(),
      name: newItemName,
      isInFridge: true,
    };
    
    setItems([...items, newItem]);
    setNewItemName('');
  };

  const removeItem = (id) => {
    setItems(items.filter(item => item.id !== id));
  };

  const toggleItemPosition = (id) => {
    setItems(items.map(item => 
      item.id === id ? { ...item, isInFridge: !item.isInFridge } : item
    ));
  };

  const itemsInFridge = items.filter(item => item.isInFridge);
  const itemsOutside = items.filter(item => !item.isInFridge);

  return (
    <div className="fridge-app">
      <h1>–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫</h1>
      
      <div className="fridge-container">
        {/* –•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ */}
        <div className={`fridge ${isOpen ? 'open' : ''}`}>
          <div className="fridge-door">
            <div className="door-handle" onClick={toggleDoor}></div>
          </div>
          
          {/* –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ */}
          {isOpen && (
            <div className="fridge-interior">
              <div className="fridge-content">
                <h3>–í —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–µ:</h3>
                {itemsInFridge.length === 0 ? (
                  <p>–•–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ –ø—É—Å—Ç</p>
                ) : (
                  <div className="items-grid">
                    {itemsInFridge.map(item => (
                      <div key={item.id} className="fridge-item">
                        <span>{item.name}</span>
                        <button 
                          onClick={() => toggleItemPosition(item.id)}
                          className="item-btn"
                        >
                          –í—ã–Ω—É—Ç—å
                        </button>
                        <button 
                          onClick={() => removeItem(item.id)}
                          className="item-btn delete"
                        >
                          üóëÔ∏è
                        </button>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            </div>
          )}
        </div>

        {/* –ü—Ä–æ–¥—É–∫—Ç—ã —Å–Ω–∞—Ä—É–∂–∏ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ - —Ç–µ–ø–µ—Ä—å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ —Ä—è–¥–æ–º */}
        {itemsOutside.length > 0 && (
          <div className="outside-items">
            <h3>–†—è–¥–æ–º —Å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–æ–º:</h3>
            {itemsOutside.length === 0 ? (
              <p>–ù–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–Ω–∞—Ä—É–∂–∏</p>
            ) : (
              <div className="items-grid">
                {itemsOutside.map(item => (
                  <div key={item.id} className="fridge-item outside">
                    <span>{item.name}</span>
                    <button 
                      onClick={() => toggleItemPosition(item.id)}
                      className="item-btn"
                    >
                      –ü–æ–ª–æ–∂–∏—Ç—å
                    </button>
                    <button 
                      onClick={() => removeItem(item.id)}
                      className="item-btn delete"
                    >
                      üóëÔ∏è
                    </button>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}
      </div>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è - —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω–æ –≤–Ω–∏–∑—É */}
      <div className="control-panel">
        <button 
          onClick={toggleDoor} 
          className={`door-btn ${isOpen ? 'close' : 'open'}`}
        >
          {isOpen ? '–ó–∞–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫' : '–û—Ç–∫—Ä—ã—Ç—å —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫'}
        </button>
        
        <div className="add-item-form">
          <input
            type="text"
            value={newItemName}
            onChange={(e) => setNewItemName(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞"
            onKeyPress={(e) => e.key === 'Enter' && addItem()}
          />
          <button onClick={addItem}>–î–æ–±–∞–≤–∏—Ç—å</button>
        </div>
      </div>
    </div>
  );
};

export default Fridge;